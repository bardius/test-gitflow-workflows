name: "Draft new release original"

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'The branch you want to create release from.'
        required: true

jobs:
  draft-new-release:
    name: "Draft a new release"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      - name: Checkout ${{ github.event.inputs.source_branch }} to prepare release
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.source_branch }}

      # Calculate the next release version based on conventional semantic release
      - name: Create release branch
        id: create-release
        run: |
          current_version=$(jq -r .version package.json)
          
          npm ci
          npm run release -- --skip.commit --skip.tag --skip.changelog
          new_version=$(jq -r .version package.json)
          git reset --hard

          branch_name="release/${new_version}"

          echo "Current version is $current_version"
          echo "New version is $new_version"
          echo "New branch name is $branch_name"
          git checkout -b "$branch_name" ${{ github.event.inputs.source_branch }}

      - name: Update changelog & bump version
        run: |
          npm ci
          npm run release
          echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Push new branch
        run: git push --set-upstream origin ${{ steps.create-release.outputs.branch_name }}

      - name: Create pull request into master
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ steps.create-release.outputs.branch_name }}
          destination_branch: "master"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: "ci: Pulling ${{ steps.create-release.outputs.branch_name }} into master"
          pr_body: ":crown: *An automated PR*"
          pr_reviewer: ${{ github.actor }}
